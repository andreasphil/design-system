/* -------------------------------------------------- *
 * Text(-ish) inputs                                  *
 * -------------------------------------------------- */

@use "../lib";

:where(textarea),
:where(input:not([type="checkbox"], [type="radio"], [type="file"], [type="range"], [type="image"])) {
  @include lib.outline(var(--input-focus-color, var(--c-primary-container)));
  @include lib.transition(#{color, background-color, border-color, box-shadow});

  -webkit-appearance: none;
  appearance: none;
  background: var(--input-bg, var(--c-bg));
  border-radius: var(--border-radius);
  border: var(--border-width) solid var(--input-border-color, var(--c-border));
  caret-color: var(--input-border-color, initial);
  color: var(--input-fg, inherit);
  font: inherit;
  letter-spacing: inherit;
  padding: var(--input-padding-y, 0.75rem) var(--input-padding-x, 0.75rem);
  width: 100%;

  &:where(:hover, :focus) {
    --input-border-color: var(--c-primary);
  }

  &::placeholder {
    color: var(--input-placeholder-color, var(--c-fg-variant));
    opacity: 1;
  }

  // Add some spacing between text and input when used in labels
  :where(label) > & {
    margin-top: 0.25rem;
  }
}

:where(input):where([type="date"], [type="time"], [type="datetime-local"]) {
  // Make date inputs the same height as others by manually setting the control
  // height (fix for Safari)
  $text-height: calc(var(--line-height) * var(--font-size));
  $padding: 0.75rem * 2;
  $border-size: calc(var(--border-width) * 2);
  height: calc(#{$text-height} + #{$padding} + #{$border-size});
}

:where(textarea[f-no-resize]) {
  resize: none;
}
