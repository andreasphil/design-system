/* -------------------------------------------------- *
 * Dark mode & theming                                *
 * -------------------------------------------------- */

@use "../icons/icons";

@function tinted($s, $l) {
  $s: calc($s * var(--theme-saturate));
  $l: calc($l * var(--theme-lighten));

  @return var(--theme-tint) $s $l;
}

@function tintedHsl($s, $l, $a: false) {
  @if not $a {
    $a: 1;
  }

  @return hsl(#{tinted($s, $l)} / $a);
}

@mixin themeBase() {
  --theme-tint: 155;
  --theme-saturate: 1;
  --theme-lighten: 1;
  --theme-primary: #{tinted(80%, 44%)};

  --c-primary: hsl(var(--theme-primary));
  --c-on-primary: #{tintedHsl(0%, 100%)};
  --c-surface-primary-bg: hsl(var(--theme-primary) / 0.2);
}

@mixin lightTheme() {
  --color-scheme: light;
  --c-border: #{tintedHsl(14%, 84%)};
  --c-border-variant: #{tintedHsl(14%, 94%)};
  --c-outline: var(--c-surface-primary-bg);
  --c-shadow: #{tintedHsl(14%, 88%)};
  --c-bg: #{tintedHsl(10%, 99%)};
  --c-backdrop-bg: #{tintedHsl(10%, 99%, 0.8)};
  --c-fg: #{tintedHsl(12%, 6%)};
  --c-fg-variant: #{tintedHsl(8%, 55%)};
  --c-surface-bg: #{tintedHsl(0%, 100%)};
  --c-surface-fg: var(--c-fg);
  --c-surface-variant-bg: #{tintedHsl(11%, 96%)};
  --c-surface-variant-fg: var(--c-surface-fg);
}

@mixin darkTheme {
  --color-scheme: dark;
  --c-border: #{tintedHsl(14%, 18%)};
  --c-border-variant: #{tintedHsl(14%, 11%)};
  --c-shadow: #{tintedHsl(10%, 4%)};
  --c-bg: #{tintedHsl(10%, 5%)};
  --c-backdrop-bg: #{tintedHsl(10%, 5%, 0.8)};
  --c-fg: #{tintedHsl(0%, 100%)};
  --c-fg-variant: #{tintedHsl(8%, 55%)};
  --c-surface-bg: #{tintedHsl(12%, 8%)};
  --c-surface-fg: var(--c-fg);
  --c-surface-variant-bg: #{tintedHsl(14%, 11%)};
  --c-surface-variant-fg: var(--c-surface-fg);
}

:root {
  @include themeBase;
}

:root,
[data-theme="light"] {
  @include lightTheme;
  @include icons.lightIcons;
}

[data-theme="dark"] {
  @include darkTheme;
  @include icons.darkIcons;
}

@media (prefers-color-scheme: dark) {
  :root:not([data-theme="light"]) {
    @include darkTheme;
    @include icons.darkIcons;
  }
}

// Backdrop doesn't inherit from root, so we'll need to declare variables
// separately. Unfortunately this doesn't play very nicely with forced theming
// via [data-theme], but I can't think of a good solution ...
::backdrop {
  @include themeBase;
  @include lightTheme;
}

@media (prefers-color-scheme: dark) {
  ::backdrop {
    @include darkTheme;
  }
}
